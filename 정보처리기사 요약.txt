정보처리기사 중요부분 요약


1. 소프트웨어 생명주기 모델(SDLC: Software Development Life Cycle)
  ㄴ 소프트웨어 생명주기는 시스템의 요구분석부터 유지보수까지 전 공정을 체계화한 절차.
  
 가. 소프트웨어 생명주기 모델 프로세스
  ㅇ 요설구테유
    - 요구사항 분석 -> 설계 -> 구현 -> 테스트 -> 유지보수 

 나. 소프트웨어 생명주기 모델 종류
   ㅇ 폭프나반: 폭포수 모델, 프로토타이핑 모델, 나선형 모델, 반복적 모델
     1) 폭포수 모델
      - 폭포수 모델은 가장 오래된 모델이자 순차적 모형, 성공 사례가 많고 산출물이 명확하지만 요구사항 변경이 어려움 
      - 절차: 타당성 검토 -> 계획 -> 요구사항 분석 -> 설계 -> 구현 -> 테스트 -> 유지보수
  
     2) 나선형 모델
      - 시스템 개발 시 위험을 최소화 하기 위해 점진적으로 완벽한 시스템으로 개발해나가는 모델
      - 절차: 계획 및 정의 -> 위험 분석 -> 개발 -> 고객 평가
  
     3) 프로토 타이핑 모델 
      - 고객이 요구한 주요 기능을 프로토타입으로 구현하여, 고객의 피드백을 반영하여 소프트웨어를 만들어가는 모델
      - 프로토 타입은 발주자나 개발자 모두에게 공동의 참조모델 제공
   
     4) 반복적 모델
      - 구축 대상을 나누어 병렬적으로 개발 후 통합하거나, 반복적을 개발하여 점증 완성시키는 모델

 다. 소프트웨어 개발 방법론
  ㄴ 소프트웨어 개발 방법론은 소프트웨어 개발 전 과정에 지속적으로 적용할 수 있는 방법, 절차, 기법이다.
    SW를 하나의 생명체로 간주하고 개발의 시작부터 시스템을 사용하지 않는 과정까지의 전 과정 형상화
  
   ㅇ 소프트웨어 개발 방법론 종류
     - 구정객컴애제: 구조적, 정보공학, 객체지향, 컴포넌트 기반, 애자일, 제품 계열 방법론
   가. 구조적 방법론
     - 전체 시스템을 기능에 따라 나누어 개발하고, 이를 통합하는 분할과 정복  접근 방식의 방법론
     - 프로세스 중심의 하향식 방법론
     - 나씨-슈나이더만 차트 사용(논리의 기술에 중점을 둔 도형식 표현 방법, 연속, 선택 및 다중선택, 반복 등의 제어 논리 구조로 표현, 조건이 복합되어 있는 곳의 처리를 시각적으로 명확히 식별하는데 적합)
   나. 정보공학 방법론
     - 정보시스템 개발에 필요한 관리 절차와 작업 기법을 체계화한 방법론
     - 개발 주기를 이용해 대형 프로젝트를 수행하는 체계적인 방법론
   다. 객체지향 방법론
     - 객체라는 기본 단위로 시스템을 분석 및 설계하는 방법론
     - 복잡한 현실 세계를 사람이 이해하는 방식으로 시스템에 적용, 객체, 클래스, 메시지 사용ㅓㅓ
   라. 컴포넌트 기반 방법론
     - 소프트웨어를 구성하는 컴포넌트를 조립해서 하나의 새로운 응용 프로그램을 작성하는 방법론
     - 개발 기간 단축으로 생산성 향상, 새로운 기능 추가 쉬움, 소프트웨어 재사용 가능
   마. 애자일 방법론
     - 절차보다는 사람이 중심이 되어 변화에 유연하고 신속하게 적응하면서 효율적으로 시스템을 개발할 수 있는 신속 적응적 경량 개발방법론
     - 애자일은 개발 과정의 어려움을 극복하기 위해 적극적으로 모색한 방법론
   바. 제품 계열 방법론
     - 특정 제품에 적용하고 싶은 공통된 기능을 정의하여 개발하는 방법론
     - 임베디드 소프트웨어를 작성하는 데 유용한 방법론
     
  ㅁ 애자일 방법론의 개념
   ㅇ 애자일 방법론은 절차보다는 사람이 중심이 되어 변화에 유연하고 신속하게 적응하면서 효율적으로 시스템을 개발할 수 있는 신속 적응적 경량 개발 방법론이다.
   ㅇ 개발기간이 짧고 신속하며, 폭포수 모형에 대비되는 방법론으로 개발과 함께 즉시 피드백을 받아서 유동적으로 개발할 수 있다. 
   
   ㅇ 애자일 방법론은 대표적으로 XP, 린(Learn), 스크럼(SCRUM) 등이 있다.
   ㅇ XP(extrema Programming)
    - XP의 5가지 가치: 용단의피존(용기, 단순성, 의사소통, 피드백, 존중)
    - XP 12가지 기본원리: 짝 프로그래밍, 공동 코드 소유, 지속적인 통합, 계획 세우기, 작은 릴리즈, 메타포어, 간단한 디자인, 테스트 기반 개발, 리팩토링, 40시간 작업, 고객 상주, 코드 표준
   ㅇ 스크럼
    - 백로그, 스프린트, 스크럼 미팅, 스크럼 마스터, 스프린트 회고, 번 다운 차트
   ㅇ 린
    - 도요타의 린 시스템 품질 기법을 소프트웨어 개발 프로세스에 적용해서 낭비 요소를 제거하여 품질을 향상시킨 방법론
    - JIT, 칸반 보드 사용
    - 7가지 원칙: 낭품지늦빠사전 - 낭비제거, 품질 내재화, 지식 창출, 늦은 확정, 빠른 인도, 사람 존중, 전체 최적화